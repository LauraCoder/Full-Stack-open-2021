{"version":3,"sources":["services/blogs.js","services/login.js","components/Notification.js","components/BlogForm.js","components/Blog.js","components/DeleteButton.js","components/BlogList.js","components/Togglable.js","components/LoginForm.js","App.js","index.js"],"names":["baseUrl","token","exportedObjects","getAll","a","request","axios","get","then","response","data","create","newObject","config","headers","Authorization","post","update","id","put","deleteBlog","delete","setToken","newToken","login","credentials","Notification","message","className","type","text","BlogForm","createBlog","useState","title","setTitle","author","setAuthor","url","setUrl","onSubmit","event","preventDefault","value","onChange","target","Blog","blog","addMoreLikes","likes","onClick","DeleteButton","user","removeBlog","username","BlogList","addLikes","show","setShow","handleClick","label","blogObject","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","LoginForm","handleLogin","handleUsernameChange","handlePasswordChange","password","App","blogs","setBlogs","setUsername","setPassword","setUser","setMessage","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","addBlog","blogFormRef","current","returnedBlog","concat","console","log","catch","error","useRef","confirm","filter","name","removeItem","exception","sort","b","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4addeeba.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteBlog = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst exportedObjects = { getAll, create, update, deleteBlog, setToken }\r\n\r\nexport default exportedObjects","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nconst exportedObjects = { login }\r\n\r\nexport default exportedObjects","import React from 'react'\r\n\r\n//renders notification message\r\nconst Notification = ({ message }) => {\r\n  /*if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className={message.type}>\r\n      {message.text}\r\n    </div>\r\n  )*/\r\n  return message === null\r\n    ? null :\r\n    <div className={message.type}>\r\n      {message.text}\r\n    </div>\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const handleTitle = (event) => {\r\n    setTitle(event.target.value)\r\n  }\r\n\r\n  const handleAuthor = (event) => {\r\n    setAuthor(event.target.value)\r\n  }\r\n\r\n  const handleUrl = (event) => {\r\n    setUrl(event.target.value)\r\n  }\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title: title,\r\n      author: author,\r\n      url: url\r\n    })\r\n\r\n    setAuthor('')\r\n    setTitle('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={addBlog}>\r\n        <div>\r\n          title\r\n          <input\r\n            value={title}\r\n            id='title'\r\n            onChange={handleTitle}\r\n          />\r\n        </div>\r\n        <div>\r\n          author\r\n          <input\r\n            value={author}\r\n            id='author'\r\n            onChange={handleAuthor}\r\n          />\r\n        </div>\r\n        <div>\r\n          url\r\n          <input\r\n            value={url}\r\n            id='url'\r\n            onChange={handleUrl}\r\n          />\r\n        </div>\r\n        <button type='submit'>create</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React from 'react'\r\n\r\nconst Blog = ({ blog, addMoreLikes }) => {\r\n\r\n  return (\r\n    <>\r\n      <li>\r\n        <p>{blog.url}</p>\r\n        <p>likes: {blog.likes} <button onClick={addMoreLikes}>like</button></p>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst DeleteButton = ({ blog, user, removeBlog }) => {\r\n  return user.username !== blog.user.username\r\n    ? null\r\n    : <button onClick={removeBlog}>delete</button>\r\n}\r\n\r\nexport default DeleteButton","import React, { useState } from 'react'\r\nimport Blog from './Blog'\r\nimport DeleteButton from './DeleteButton'\r\n\r\nconst BlogList = ({ blog, addLikes, deleteBlog, user }) => {\r\n  const [ show, setShow ] = useState(false)\r\n\r\n  const handleClick = () => setShow(!show)\r\n\r\n  const addMoreLikes = () => {\r\n    const blogObject = { ...blog, likes: blog.likes + 1 }\r\n    addLikes(blogObject)\r\n  }\r\n\r\n  const removeBlog = () => {\r\n    deleteBlog(blog.id, blog.title)\r\n  }\r\n\r\n  const label = show\r\n    ? 'hide'\r\n    : 'show'\r\n\r\n  //Clicking title will either show or hide information of a blog\r\n  if (show) {\r\n    return (\r\n      <>\r\n        <li className='blogInfo'>\r\n          <h4>{blog.title} - {blog.author}</h4>\r\n          <button onClick={handleClick}>\r\n            {label}\r\n          </button>\r\n          <ul className='blogInfo'>\r\n            <Blog blog={blog} addMoreLikes={addMoreLikes} removeBlog={removeBlog} user={user} />\r\n            <DeleteButton removeBlog={removeBlog} blog={blog} user={user}/>\r\n          </ul>\r\n        </li>\r\n      </>\r\n    )\r\n  }\r\n\r\n  //If title is not clicked, only the list of filtered countries will be shown\r\n  return (\r\n    <>\r\n      <li className='blogHeader'>\r\n        <h4>{blog.title} - {blog.author}</h4>\r\n        <button onClick={handleClick}>\r\n          {label}\r\n        </button>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogList","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display:  visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({ handleLogin, handleUsernameChange, handlePasswordChange, username, password }) => {\r\n\r\n  return (\r\n    <>\r\n      <h2>Log in to application</h2>\r\n\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type='password'\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" id='login'>login</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React, { useState, useRef, useEffect } from 'react'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport Notification from './components/Notification'\r\nimport BlogForm from './components/BlogForm'\r\nimport BlogList from './components/BlogList'\r\nimport Togglable from './components/Togglable'\r\nimport LoginForm from './components/LoginForm'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [message, setMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    blogService\r\n      .getAll()\r\n      .then(blogs =>\r\n        setBlogs( blogs )\r\n      )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setMessage({\r\n        text: 'wrong credentials',\r\n        type: 'error'\r\n      })\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const handleLogout = (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      window.localStorage.removeItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n      setUser(null)\r\n      setMessage({\r\n        text: 'you are now logged out',\r\n        type: 'success'\r\n      })\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    } catch (exception) {\r\n      setMessage({\r\n        text: 'something went wrong while logging out',\r\n        type: 'error'\r\n      })\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const addBlog = (blogObject) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    blogService\r\n      .create(blogObject)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.concat(returnedBlog))\r\n        setMessage({\r\n          text: `a new blog ${blogObject.title} by ${blogObject.author}`,\r\n          type: 'success'\r\n        })\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 3000)\r\n        console.log('Blog added')\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data)\r\n        setMessage({\r\n          text: 'something went wrong, new blog wasn not added',\r\n          type: 'error'\r\n        })\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 3000)\r\n      })\r\n  }\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n  const addLikes = async (blogObject) => {\r\n    await blogService.update(blogObject.id, blogObject)\r\n    blogService.getAll()\r\n      .then(blogs => { setBlogs(blogs) })\r\n      .then(() => {\r\n        setMessage({\r\n          text: 'New like was added!',\r\n          type: 'success'\r\n        })\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 3000)\r\n        console.log('Blog added')\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data)\r\n        setMessage({\r\n          text: 'Adding like did not work',\r\n          type: 'error'\r\n        })\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 3000)\r\n      })\r\n  }\r\n\r\n  const deleteBlog = (id, title) => {\r\n    if (window.confirm(`Delete ${title} ?`)) {\r\n      blogService\r\n        .deleteBlog(id)\r\n        .then(response => {\r\n          setBlogs(blogs.filter(blog => blog.id !== id))\r\n          setMessage({\r\n            text: `Blog ${title} was deleted`,\r\n            type: 'success'\r\n          })\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 2000)\r\n          console.log('Blog deleted', response)\r\n        })\r\n        .catch(error => {\r\n          setMessage({\r\n            text: `Blog '${title}' was already removed from server`,\r\n            type: 'error'\r\n          })\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 2000)\r\n          console.error(error)\r\n          setBlogs(blogs.filter(blog => blog.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const sortBlogs = () => {\r\n    return (\r\n      blogs\r\n        .sort((a,b) => b.likes - a.likes)\r\n        .map(blog =>\r\n          <BlogList key={blog.id} blog={blog} addLikes={addLikes} deleteBlog={deleteBlog} user={user}/>\r\n        )\r\n    )\r\n  }\r\n\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <Notification message={message} />\r\n        <LoginForm\r\n          handleLogin={handleLogin}\r\n          handleUsernameChange={({ target }) => setUsername(target.value)}\r\n          handlePasswordChange={({ target }) => setPassword(target.value)}\r\n          password={password}\r\n          username={username}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <Notification message={message} />\r\n      <p>{user.name} logged in <button onClick={handleLogout}>logout</button></p>\r\n      {blogForm()}\r\n      <ul className='blogStyle'>\r\n        {sortBlogs()}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}